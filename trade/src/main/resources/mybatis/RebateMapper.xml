<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.meirengu.trade.dao.RebateDao" >


	<sql id="table_name">`rebate`</sql>
	<sql id="select_columns">
		rebate_id as rebateId, rebate_sn as rebateSn, rebate_batch as rebateBatch, channel as channel, valid_start_time as validStartTime, valid_end_time as validEndTime, create_time as createTime, update_time as updateTime, operate_account as operateAccount
	</sql>

	<insert id="insert" parameterType="rebate" useGeneratedKeys="true" keyProperty="rebateId" >
		INSERT INTO <include refid="table_name" />
			(rebate_id, rebate_sn, rebate_batch, channel, valid_start_time, valid_end_time, create_time, operate_account)
		VALUES
			(#{rebateId}, #{rebateSn}, #{rebateBatch}, #{channel}, #{validStartTime}, #{validEndTime}, #{createTime}, #{operateAccount})
	</insert>
	<insert id="batchSave" parameterType="java.util.List" useGeneratedKeys="true"  >
		<selectKey resultType="long" keyProperty="rebateId" order="AFTER">
		SELECT
		LAST_INSERT_ID()
	</selectKey>

		INSERT INTO <include refid="table_name" />
		(rebate_id, rebate_sn, rebate_batch, channel, operate_account)
		VALUES
		<foreach collection="list" item="item" index="index" separator="," >
			(#{item.rebateId}, #{item.rebateSn}, #{item.rebateBatch}, #{item.channel}, #{item.operateAccount})
		</foreach>
	</insert>

	<update id="update" parameterType="rebate">
	UPDATE <include refid="table_name" />
	<set>
		<if test="@Ognl@isNotEmpty(rebateSn)">
			rebate_sn=#{rebateSn},
		</if>
		<if test="@Ognl@isNotEmpty(rebateBatch)">
			rebate_batch=#{rebateBatch},
		</if>
		<if test="@Ognl@isNotEmpty(channel)">
			channel=#{channel},
		</if>
		<if test="@Ognl@isNotEmpty(validStartTime)">
			valid_start_time=#{validStartTime},
		</if>
		<if test="@Ognl@isNotEmpty(validEndTime)">
			valid_end_time=#{validEndTime},
		</if>
		<if test="@Ognl@isNotEmpty(createTime)">
			create_time=#{createTime},
		</if>
		<if test="@Ognl@isNotEmpty(updateTime)">
			update_time=#{updateTime},
		</if>
		<if test="@Ognl@isNotEmpty(operateAccount)">
			operate_account=#{operateAccount},
		</if>
	</set>
	<where>
		rebate_id = #{rebateId}
	</where>
</update>

	<!--根据优惠券号跟新-->
	<update id="updateBySn" parameterType="rebate">
		UPDATE <include refid="table_name" />
		<set>
			<if test="@Ognl@isNotEmpty(rebateBatch)">
				rebate_batch=#{rebateBatch},
			</if>
			<if test="@Ognl@isNotEmpty(channel)">
				channel=#{channel},
			</if>
			<if test="@Ognl@isNotEmpty(validStartTime)">
				valid_start_time=#{validStartTime},
			</if>
			<if test="@Ognl@isNotEmpty(validEndTime)">
				valid_end_time=#{validEndTime},
			</if>
			<if test="@Ognl@isNotEmpty(createTime)">
				create_time=#{createTime},
			</if>
			<if test="@Ognl@isNotEmpty(updateTime)">
				update_time=#{updateTime},
			</if>
			<if test="@Ognl@isNotEmpty(operateAccount)">
				operate_account=#{operateAccount},
			</if>
		</set>
		<where>
			rebate_sn = #{rebateSn}
		</where>
	</update>

	<select id="detail" parameterType="integer" resultType="rebate">
		select <include refid="select_columns" /> from <include refid="table_name"/>
		where rebate_id=#{id}
	</select>

	<!-- 查询条件 -->
	<sql id="findPage_where">
		<where>
			<if test="@Ognl@isNotEmpty(rebateId)">
				AND tb.rebate_id=#{rebateId}
			</if>
			<if test="@Ognl@isNotEmpty(rebateSn)">
				AND tb.rebate_sn=#{rebateSn}
			</if>
			<if test="@Ognl@isNotEmpty(rebateBatch)">
				AND tb.rebate_batch=#{rebateBatch}
			</if>
			<if test="@Ognl@isNotEmpty(channel)">
				AND tb.channel=#{channel}
			</if>
			<if test="@Ognl@isNotEmpty(validStartTimeBegin)">
				AND tb.valid_start_time>=#{validStartTimeBegin}
			</if>
			<if test="@Ognl@isNotEmpty(validStartTimeEnd)">
				AND tb.valid_start_time &lt;= #{validStartTimeEnd}
			</if>
			<if test="@Ognl@isNotEmpty(validEndTimeBegin)">
				AND tb.valid_end_time>=#{validEndTimeBegin}
			</if>
			<if test="@Ognl@isNotEmpty(validEndTimeEnd)">
				AND tb.valid_end_time &lt;= #{validEndTimeEnd}
			</if>
			<if test="@Ognl@isNotEmpty(createTimeBegin)">
				AND tb.create_time>=#{createTimeBegin}
			</if>
			<if test="@Ognl@isNotEmpty(createTimeEnd)">
				AND tb.create_time &lt;= #{createTimeEnd}
			</if>
			<if test="@Ognl@isNotEmpty(operateAccount)">
				AND tb.operate_account=#{operateAccount}
			</if>
		</where>
	</sql>

	<!-- 分页相关开始 -->
	<select id="getByPage" resultType="Map" parameterType="Map">
		select <include refid="select_columns" />
		FROM <include refid="table_name" /> tb
		<include refid="findPage_where"/>
		<if test="@Ognl@isNotEmpty(sortBy) and @Ognl@isNotEmpty(order)">
			order by ${sortBy} ${order}
		</if>
	</select>

	<select id="getCount" parameterType="Map" resultType="Integer">
		select count(1)
		FROM <include refid="table_name" /> tb
		<include refid="findPage_where"/>
	</select>
	<!-- 分页相关结束 -->

	<!-- 抵扣券连表查询开始 -->
	<select id="getByPage" resultType="Map" parameterType="Map">
		select
		<include refid="select_columns" />
		FROM
		<include refid="table_name" />tb
		<include refid="findPage_where"/>
		<if test="@Ognl@isNotEmpty(sortBy) and @Ognl@isNotEmpty(order)">
			order by ${sortBy} ${order}
		</if>
	</select>

	<select id="getCount" parameterType="Map" resultType="Integer">
		select count(1)
		FROM
		<include refid="table_name" />tb


		<include refid="findPage_where"/>
	</select>
	<!-- 抵扣券连表查询结束 -->
	SELECT
	tr.rebate_id,
	tr.rebate_sn,
	tr.valid_start_time,
	tr.valid_end_time,
	trb.batch_id,
	trb.rebate_type,
	trb.rebate_limit_amount,
	trb.rebate_use_range,
	trb.rebate_use_range_value,
	trb.rebate_name,
	trb.rebate_scope,
	trb.rebate_amount,
	trb.channel,
	trr.id,
	trr.user_id,
	trr.user_phone,
	trr.receive_time,
	trr.`status`,
	tru.order_sn,
	tru.used_time
	FROM
	rebate tr
	LEFT JOIN rebate_batch trb ON tr.rebate_batch = trb.batch_id
	LEFT JOIN rebate_receive trr ON tr.rebate_sn = trr.rebate_sn
	LEFT JOIN rebate_used tru ON tr.rebate_sn = tru.rebate_sn;

</mapper>