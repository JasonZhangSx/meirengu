<?xml version="1.0" encoding="UTF-8" ?>
         <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
         <mapper namespace="com.meirengu.trade.dao.RefundDao" >
	<sql id="table_name">refund</sql>
	<sql id="select_columns">refund_id as refundId, refund_sn as refundSn, order_id as orderId, order_sn as orderSn, third_order_sn as thirdOrderSn, third_refund_sn as thirdRefundSn, item_id as itemId, partner_id as partnerId, user_id as userId, user_name as userName, user_phone as userPhone, create_time as createTime, order_amount as orderAmount, order_refund as orderRefund, refund_paymentname as refundPaymentname, refund_paymentcode as refundPaymentcode, refund_message as refundMessage, user_message as userMessage, admin_message as adminMessage, partner_time as partnerTime, admin_time as adminTime, confirm_time as confirmTime, refund_type as refundType, refund_state as refundState, user_confirm as userConfirm
	</sql>
	<sql id="select_columns_refund">tb.refund_id as refundId, tb.refund_sn as refundSn, tb.order_id as orderId, tb.order_sn as orderSn, tb.third_order_sn as thirdOrderSn, tb.third_refund_sn as thirdRefundSn, tb.item_id as itemId, tb.partner_id as partnerId, tb.user_id as userId, tb.user_name as userName, tb.user_phone as userPhone, tb.create_time as createTime, tb.order_amount as orderAmount, tb.order_refund as orderRefund, tb.refund_paymentname as refundPaymentname, tb.refund_paymentcode as refundPaymentcode, tb.refund_message as refundMessage, tb.user_message as userMessage, tb.admin_message as adminMessage, tb.partner_time as partnerTime, tb.admin_time as adminTime, tb.confirm_time as confirmTime, tb.refund_type as refundType, tb.refund_state as refundState, tb.user_confirm as userConfirm
	</sql>
	<insert id="insert" parameterType="refund" useGeneratedKeys="true" keyProperty="refundId" >
		INSERT INTO <include refid="table_name" />
			(refund_id, refund_sn, order_id, order_sn, third_order_sn, third_refund_sn, item_id, partner_id, user_id, user_name, user_phone, order_amount, order_refund, refund_paymentname, refund_paymentcode, refund_message, user_message, admin_message, partner_time, admin_time, confirm_time, refund_type, refund_state, user_confirm)
		VALUES
			(#{refundId}, #{refundSn}, #{orderId}, #{orderSn}, #{thirdOrderSn}, #{thirdRefundSn}, #{itemId}, #{partnerId}, #{userId}, #{userName}, #{userPhone}, #{orderAmount}, #{orderRefund}, #{refundPaymentname}, #{refundPaymentcode}, #{refundMessage}, #{userMessage}, #{adminMessage}, #{partnerTime}, #{adminTime}, #{confirmTime}, #{refundType}, #{refundState}, #{userConfirm})
	</insert>
	<update id="update" parameterType="refund">
		UPDATE <include refid="table_name" />
		<set>
			<if test="@Ognl@isNotEmpty(refundSn)">
				refund_sn=#{refundSn},
			</if>
			<if test="@Ognl@isNotEmpty(orderId)">
				order_id=#{orderId},
			</if>
			<if test="@Ognl@isNotEmpty(orderSn)">
				order_sn=#{orderSn},
			</if>
			<if test="@Ognl@isNotEmpty(thirdOrderSn)">
				third_order_sn=#{thirdOrderSn},
			</if>
			<if test="@Ognl@isNotEmpty(thirdRefundSn)">
				third_refund_sn=#{thirdRefundSn},
			</if>
			<if test="@Ognl@isNotEmpty(itemId)">
				item_id=#{itemId},
			</if>
			<if test="@Ognl@isNotEmpty(partnerId)">
				partner_id=#{partnerId},
			</if>
			<if test="@Ognl@isNotEmpty(userId)">
				user_id=#{userId},
			</if>
			<if test="@Ognl@isNotEmpty(userName)">
				user_name=#{userName},
			</if>
			<if test="@Ognl@isNotEmpty(userPhone)">
				user_phone=#{userPhone},
			</if>
			<if test="@Ognl@isNotEmpty(orderAmount)">
				order_amount=#{orderAmount},
			</if>
			<if test="@Ognl@isNotEmpty(orderRefund)">
				order_refund=#{orderRefund},
			</if>
			<if test="@Ognl@isNotEmpty(refundPaymentname)">
				refund_paymentname=#{refundPaymentname},
			</if>
			<if test="@Ognl@isNotEmpty(refundPaymentcode)">
				refund_paymentcode=#{refundPaymentcode},
			</if>
			<if test="@Ognl@isNotEmpty(refundMessage)">
				refund_message=#{refundMessage},
			</if>
			<if test="@Ognl@isNotEmpty(userMessage)">
				user_message=#{userMessage},
			</if>
			<if test="@Ognl@isNotEmpty(adminMessage)">
				admin_message=#{adminMessage},
			</if>
			<if test="@Ognl@isNotEmpty(partnerTime) ">
				partner_time=#{partnerTime},
			</if>
			<if test="@Ognl@isNotEmpty(adminTime) ">
				admin_time=#{adminTime},
			</if>
			<if test="@Ognl@isNotEmpty(confirmTime) ">
				confirm_time=#{confirmTime},
			</if>
			<if test="@Ognl@isNotEmpty(refundType)">
				refund_type=#{refundType},
			</if>
			<if test="@Ognl@isNotEmpty(refundState)">
				refund_state=#{refundState},
			</if>
			<if test="@Ognl@isNotEmpty(userConfirm)">
				user_confirm=#{userConfirm},
			</if>
		</set>
		<where>
			refund_id = #{refundId}
		</where>
	</update>
	<select id="detail" parameterType="integer" resultType="refund">
		select <include refid="select_columns" /> from <include refid="table_name"/>
		where refund_id=#{refundId}
	</select>
	<select id="getBySn" parameterType="string" resultType="refund">
		select <include refid="select_columns" /> from <include refid="table_name"/>
		where refund_sn=#{refundSn}
	</select>


	<sql id="findPage_where">
		<where>
			<if test="@Ognl@isNotEmpty(refundSn)">
				AND tb.refund_sn=#{refundSn}
			</if>
			<if test="@Ognl@isNotEmpty(orderId)">
				AND tb.order_id=#{orderId}
			</if>
			<if test="@Ognl@isNotEmpty(orderSn)">
				AND tb.order_sn=#{orderSn}
			</if>
			<if test="@Ognl@isNotEmpty(thirdOrderSn)">
				AND tb.third_order_sn=#{thirdOrderSn}
			</if>
			<if test="@Ognl@isNotEmpty(thirdRefundSn)">
				AND tb.third_refund_sn=#{thirdRefundSn}
			</if>
			<if test="@Ognl@isNotEmpty(itemId)">
				AND tb.item_id=#{itemId}
			</if>
			<if test="@Ognl@isNotEmpty(partnerId)">
				AND tb.partner_id=#{partnerId}
			</if>
			<if test="@Ognl@isNotEmpty(userId)">
				AND tb.user_id=#{userId}
			</if>
			<if test="@Ognl@isNotEmpty(userName)">
				AND tb.user_name=#{userName}
			</if>
			<if test="@Ognl@isNotEmpty(userPhone)">
				AND tb.user_phone=#{userPhone}
			</if>
			<if test="@Ognl@isNotEmpty(createTimeBegin)">
				AND tb.create_time >= #{createTimeBegin}
			</if>
			<if test="@Ognl@isNotEmpty(createTimeEnd)">
				AND tb.create_time &lt;= #{createTimeEnd}
			</if>
			<if test="@Ognl@isNotEmpty(orderAmount)">
				AND tb.order_amount=#{orderAmount}
			</if>
			<if test="@Ognl@isNotEmpty(orderRefund)">
				AND tb.order_refund=#{orderRefund}
			</if>
			<if test="@Ognl@isNotEmpty(refundPaymentname)">
				AND tb.refund_paymentname=#{refundPaymentname}
			</if>
			<if test="@Ognl@isNotEmpty(refundPaymentcode)">
				AND tb.refund_paymentcode=#{refundPaymentcode}
			</if>
			<if test="@Ognl@isNotEmpty(refundMessage)">
				AND tb.refund_message=#{refundMessage}
			</if>
			<if test="@Ognl@isNotEmpty(userMessage)">
				AND tb.user_message=#{userMessage}
			</if>
			<if test="@Ognl@isNotEmpty(adminMessage)">
				AND tb.admin_message=#{adminMessage}
			</if>
			<if test="@Ognl@isNotEmpty(partnerTime) ">
				AND tb.partner_time=#{partnerTime}
			</if>
			<if test="@Ognl@isNotEmpty(adminTime) ">
				AND tb.admin_time=#{adminTime}
			</if>
			<if test="@Ognl@isNotEmpty(confirmTimeBegin)">
				AND tb.confirm_time >= #{confirmTimeBegin}
			</if>
			<if test="@Ognl@isNotEmpty(confirmTimeEnd)">
				AND tb.confirm_time &lt;= #{confirmTimeBegin}
			</if>
			<if test="@Ognl@isNotEmpty(refundType)">
				AND tb.refund_type=#{refundType}
			</if>
			<if test="@Ognl@isNotEmpty(refundState)">
				AND tb.refund_state=#{refundState}
			</if>
			<if test="@Ognl@isNotEmpty(userConfirm)">
				AND tb.user_confirm=#{userConfirm}
			</if>
		</where>
	</sql>
	<!-- 分页相关开始 -->
	<select id="getByPage" resultType="Map" parameterType="Map">
		select <include refid="select_columns" />,
		tbo.item_name AS itemName,
		tbo.item_level_name AS itemLevelName,
		tbo.item_num AS itemNum
		FROM
		<include refid="table_name" /> tb
		LEFT JOIN `order` tbo ON tb.order_id = tbo.order_id
		<include refid="findPage_where"/>
		<if test="@Ognl@isNotEmpty(sortBy) and @Ognl@isNotEmpty(order)">
			order by ${sortBy} ${order}
		</if>
	</select>

	<select id="getCount" parameterType="Map" resultType="Integer">
		select count(1)
		FROM
		<include refid="table_name" /> tb
		<include refid="findPage_where"/>
	</select>
	<!-- 分页相关结束 -->
</mapper>