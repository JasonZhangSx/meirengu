<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:p="http://www.springframework.org/schema/p" xmlns:task="http://www.springframework.org/schema/task"
	   xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

	<description>Spring公共配置</description>

	<!-- 激活自动代理功能 -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>

	<!-- 自动扫描且只扫描@Controller -->
	<context:component-scan base-package="com.meirengu.uc" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>

	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/>

	<context:component-scan base-package="com.meirengu.uc"/>
	<context:component-scan base-package="com.meirengu.rocketmq"/>

	<!-- 注解驱动 -->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8" />
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- 容器默认的DefaultServletHandler处理 所有静态内容与无RequestMapping处理的URL -->
	<mvc:default-servlet-handler />
        
	<!-- 视图解析：定义JSP文件的位置 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!--为 @async 设定线程池-->
	<task:annotation-driven executor="asyncExecutor" />
	<task:executor id="asyncExecutor" pool-size="50-10000" queue-capacity="10" rejection-policy="CALLER_RUNS"/>
	<!--设定上传缓存文件路径、大小、编码格式-->
	<bean id="multipartResolver"
		  class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		  p:defaultEncoding="UTF-8"
		  p:maxUploadSize="10485760"
		  p:uploadTempDir="WEB-INF/upload/temp"/>
	<!--&lt;!&ndash; rocketMQ配置 &ndash;&gt;-->
	<!--<context:property-placeholder location="classpath:rocketmq.properties"/>-->
	<!-- redis配置 -->
	<context:property-placeholder location="classpath:redis.properties"/>

	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.pool.maxTotal}" />
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
		<property name="numTestsPerEvictionRun" value="${redis.pool.numTestsPerEvictionRun}" />
		<property name="timeBetweenEvictionRunsMillis" value="${redis.pool.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${redis.pool.minEvictableIdleTimeMillis}" />
		<property name="softMinEvictableIdleTimeMillis" value="${redis.pool.softMinEvictableIdleTimeMillis}" />
		<property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}" />
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
		<property name="testWhileIdle" value="${redis.pool.testWhileIdle}" />
		<property name="testOnReturn" value="${redis.pool.testOnReturn}" />
		<property name="jmxEnabled" value="${redis.pool.jmxEnabled}" />
		<property name="blockWhenExhausted" value="${redis.pool.blockWhenExhausted}" />
	</bean>

	<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<constructor-arg index="1">
			<list>
				<bean name="slaver" class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg index="0" value="${redis.slaver.host}" />
					<constructor-arg index="1" value="${redis.slaver.port}"
									 type="int" />
					<property name="password" value="#{'${redis.slaver.password}'?:null}"></property>
				</bean>
				<bean name="master" class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg index="0" value="${redis.master.host}" />
					<constructor-arg index="1" value="${redis.master.port}"
									 type="int" />
					<property name="password" value="#{'${redis.slaver.password}'?:null}"></property>
				</bean>
			</list>
		</constructor-arg>
	</bean>

	<bean id="redisClient" class="com.meirengu.common.RedisClient">
		<constructor-arg name="shardedJedisPool" ref="shardedJedisPool"/>
	</bean>

</beans>
